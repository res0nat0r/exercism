name: python

on:
  push:
    paths:
      - 'python/**'
    branches:
      - master
  pull_request:
    paths:
      - 'python/**'

jobs:
  pytest:
    runs-on:
      - ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.10.4

      - name: install poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.13

      - name: load cache
        uses: actions/cache@v3.0.4
        with:
          path: ~/.cache/pypoetry
          key: dotCache-${{ runner.os }}-${{ hashFiles('.github/workflows/python.yml') }}-${{ hashFiles('poetry.lock') }}

      - name: poetry install
        run: poetry install

      - name: pytest
        run: poetry run pytest $(git ls-files '*_test.py')

  pylint:
    runs-on:
      - ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.10.4

      - name: install poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.13

      - name: load cache
        uses: actions/cache@v3.0.4
        with:
          path: ~/.cache/pypoetry
          key: dotCache-${{ runner.os }}-${{ hashFiles('.github/workflows/python.yml') }}-${{ hashFiles('poetry.lock') }}

      - name: poetry install
        run: poetry install

      - name: pylint
        run: poetry run pylint $(git ls-files '*.py' | grep -v '_test.py$')

  black:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: psf/black@stable
        with:
          options: "--check --exclude '/*_test.py'"
          src: "python"
