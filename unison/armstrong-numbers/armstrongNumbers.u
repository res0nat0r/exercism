--armstrongNumbers.isArmstrongNumber : Nat -> Boolean
--armstrongNumbers.isArmstrongNumber number 

-- armstrongNumbers.unwrap : Optional Int -> Int
-- armstrongNumbers.unwrap m =
--   Some m -> m
--   _ -> 0


{-
10 is not an Armstrong number, because 10 != 1^2 + 0^2 = 1
153 is an Armstrong number, because: 153 = 1^3 + 5^3 + 3^3 = 1 + 125 + 27 = 153
154 is not an Armstrong number, because: 154 != 1^3 + 5^3 + 4^3 = 1 + 125 + 64 = 190
-}

> Nat.toText 40523 |> toCharList |> indexed |> List.head |> Optional.map Tuple.at1 |> Optional.flatMap Char.ascii.toBase36Digit 

first_item = Nat.toText 40523 |> toCharList |> indexed |> List.head
> first_item

first_digit = Optional.map at1 first_item |> Optional.flatMap toBase36Digit
> first_digit

n = match first_digit with
      Some first_digit -> first_digit
      _ -> 0
> n

d= Optional.map Tuple.at1 first_item |> Optional.flatMap toBase36Digit
>d

-- armstrong t = match t with 
--   lhs | Optional.map Tuple.at1 t == Some Char -> lhs